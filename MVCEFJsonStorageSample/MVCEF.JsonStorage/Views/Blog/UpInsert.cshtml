@model MVCEF.JsonStorage.Enity.Blog

@{
    ViewBag.Title = "新增";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>新增博客</h2>


@using (Html.BeginForm("UpInsert","Blog",FormMethod.Post,new { @class= "form-horizontal" }))
{
    @Html.HiddenFor(t=>t.Id)
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Blog</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="Tags[]" class="form-control" multiple>
                <option value="C#">C#</option>
                <option value="ASP.NET">ASP.NET</option>
                <option value=".NET Core">.NET Core</option>
                <option value="SQL SERVER">SQL SERVER</option>
                <option value="VS">Visual Studio</option>
                <option value="EF">Entity Framework</option>

            </select>
            @Html.ValidationMessageFor(d => d.Tags, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Owner.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Owner.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Owner.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Owner.EglishName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Owner.EglishName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Owner.EglishName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Owner.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Owner.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Owner.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @{
                if (Model == null || Model.Id <= 0)
                {
                    <input type="submit" value="创建" class="btn btn-success" />
                }

                else
                {
                    <input type="submit" value="修改" class="btn btn-success" />
                }

            }
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
